Using Kubernetes as a Developer

1. How can you expose Pod and container fields to applications running in a Pod?
Using the Downward API, applications can access Pod fields and metadata by exposing the value of the Pod or container fields to environment variables.

2. You created a Deployment with five replicas using the command kubectl apply -f https://eg.com/demo/controllers/dep.yaml. How can you verify if all five replicas are ready in the Deployment?
Run kubectl get deployments and check if the AVAILABLE label has the number five in it.

3. Which metadata field in a Pod is populated by the system?
generation

4. What is the purpose of using the kompose up command?
To create a Kubernetes deployment for a Dockerized application

5. You omit a prefix when creating a Kubernetes annotation. What happens?
Kubernetes presumes that the annotation key is private to the user.

6. What objects can the dataSource field reference to?
PersistentVolumeClaim and VolumeSnapshot 

7. Which key-value pair of ConfigMap is a file-like key?
user.properties: |
  profile.picture = true
  
8. Why is Service an optional field in the Kubernetes web user interface (UI) deploy wizard?
Because not every application needs to expose a Service to an external IP address

9. Containers within a Pod share an IP address and port space. What special function does this enable for containers?
The ability to find each other with localhost

10. In Kubernetes, which environment variable controls the log destination?
KUBE_LOGGING_DESTINATION

11. You are generating Kubernetes resources using kompose. You use the following kompose labels in your docker-compose.yaml file:

kompose.volume.size as 1Gi for the requests storage’s size in the PersistentVolumeClaim
kompose.service.type as node to designate the service to be created
kompose.controller.type as daemonset to convert the deployment upon creation

When you run kompose convert, the command fails. Why is this?
You must define the kompose.service.type as nodeport instead

12. Based on the specification in the following Ingress configuration, what type of Ingress are you using?
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
 annotations:
 nginx.ingress.kubernetes.io/rewrite-target: /
spec:
 rules:
 - host: foo.bar.com
 http:
 paths:
 - path: /foo
 backend:
 serviceName: service1
 servicePort: 4200
 - path: /bar
 backend:
 serviceName: service2
 servicePort: 8080
A simple fanout

13. How many ways can you discover a Service in Kubernetes?
2

14. Inside securityContext, which label stops a process from attaining more privilege than its parent process?
allowPrivilegeEscalation

15. You are diagnosing a problem, but running kubectl get events produces too many events for you to see the problem. Which command would you use to view only the important events?
kubectl get events --field-selector type!=Normal

16. An application is working for the past half hour but is not progressing. You suspect the application never started successfully so you use a startup probe to check when it was started. This doesn't resolve the issue, however. What else can you do to make the application progress?
Use a liveness probe to catch any deadlock present in the application and restart it.

17. How are files from a directory defined inside a ConfigMap?
With the contents of a single file in the data attribute or a collection of key/value pairs that are also defined in the data attribute of the object

18. You are running a Kubernetes cluster on-premises. How would you expose an application on a single port, running on multiple Nodes, to the non-Kubernetes systems in your network?
Create a service using a NodePort running on a Pod on each worker node.

19. You want your company’s Kubernetes deployments to use dynamic Secret values generated as a set of files. Because you manage several clusters, what is the most effective way to handle this?
Attach Secrets files to Pods by declaring a volume that will mount each Secret as a file in the Pod definition.

20. Which daemon keeps track of the kernel logs and identifies kernel vulnerabilities based on predefined rules?
Kernel Monitor 
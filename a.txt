1. Which rate limit is suitable for a customer to stream a real-time video with no delays?

•  Requests per second

2. What elements of the /SubscribedUsers endpoint does the following documentation capture?
POST /SubscribedUsers/{userId}
Creates a new subscription for an existing user.
UserId: The GUID of the user to create the new subscription for

•	HTTP verb, URL, data to send, and description of when to call

3.A user makes a GET request to a RESTful API's /cars endpoint to retrieve the two most expensive cars. The API responds with the following output:
{
    "cars": [
        {
            "id": 451,
            "name": "Car A",
            "price": 1000000.00,
            "links": {
                "self": { "href": "/cars/1" },
            }
        },
        {
            "id": 452,
            "name": "Car B",
            "price": 800000.00,
            "links": {
                "self": { "href": "/cars/2" },
            }
        }
    ],
    "_links": {
        "self": { "href": "/manufacturer" }
    }
}
The user cannot navigate to each car manufacturer within the API using each car resource. Using RESTful API design principles, what changes should you make to the API to correct the issue?

•	Add "manufacturer": { "href": "/manufacturers/1" } and "manufacturer": { "href": "/manufacturers/2" } to the first and second car resources.


4.You hosted your API at https://mydomain.com for five years. The domain URL you originally wanted, https://xyz.com, becomes available for an affordable price. You purchase the new URL and move your API to it. Your existing clients start to get 404 Not Found errors when visiting the old URL, however. How do you resolve this issue? 


•  Use the 308 HTTP status code to redirect users to the new URL. 

5. You visit the domain name https://helloearth.com and receive the 404 Not Found error. What does the error signify?

•  The resource is missing with no retrieval time limit.

6. In a microservices setup, a client initiates a request that causes several network round trips with the server. You allocate additional resources to resolve the issue for that client. The next day, numerous users replicate similar API calls. What should you do?

•  Introduce API gateways between clients and services.


7.You build a real-time stock price tracking API for your basic and premium users. The API can respond to a maximum of five requests per second for basic users and 10 requests per second for premium users. How do you implement measures to ensure that users with a limit of five requests per second do not exceed their allocated limit?


•  Define a rate limit for basic users and rely on the 429 HTTP status code.


8. You run small startup. You must keep a close watch on your Java application by tracking and diagnosing issues. You use Log4j for non-audit logging on your API calls. What practical steps would you take to attain a higher peak throughput with lower logging response time latency?

•  Use asynchronous loggers without combining them with synchronous loggers.


9. Following the RESTful principles, which symbol must you use in an endpoint to separate URL resources?

 /


10.In OAuth, which statement is correct about refresh tokens?

•  You must keep the tokens confidential during their transmission. 

11.Which is an encryption algorithm?
•    Data Encryption Standard

PI Design and Development
12.
An API returns records with sequential integer IDs, starting at 1. You need the IDs: 11, 12, 13, 14, and 15. How would you write the query string?

•	skip=10&take=5


13. You have documentation for two different versions of the SubscribedUsers endpoint:
Version 1: 
POST /SubscribedUsers/v1/{userEmail}
User Email is email address associated with the user
Version 2:
POST /SubscribedUsers/v2/{userId}
User ID is the GUID of the user
Which version should developers use to pass a globally unique identifier (GUID) to the endpoint?

•  Version 2 - with no change to the current code block


14. You must sign up for a gaming application using your Google credentials. You log in to your email account and accept all the listed scopes to complete the sign up by following the OAuth 2.0 principles. While playing games, a suspicious login to your Gmail account exposes sensitive data. What caused this security breach?

•  You granted access to all the resources without reading the website's terms.


15.An API runs into a database error because of the data the API consumer supplied. How should the API respond?

•  Return a status code of 400 - Bad Request.

16. You create four products in your RESTful API. You must delete the first, second, and fourth product details. The IDs of these products are 24, 45, and 99. What steps would you take to complete the task using RESTful principles?

•  Delete each product with a separate DELETE request method by using one ID at a time.


17.In your RESTful API, you create multiple resources. Your clients can access the content with proper authorization. A client requests an update to one of the resources. You use the PUT HTTP request method to partially alter the resource. You run the same PUT request two times, which completely replaces the resource. What action could you have taken to save the resource?

•  Use the PATCH HTTP request method once instead of PUT.

18.A user makes a request to a RESTful API, but does not get a response within 20 seconds. What HTTP status code would you receive for gateway timeout?

•  504


19. Which API version includes breaking changes, rendering the old version incompatible with new features?
•  Major


20. You set the Retry-After header value to 36 with the 429 Too Many Requests HTTP status code. A user makes 150 requests to your API in 10 seconds. What happens?

•  The user cannot access the website for the next 36 seconds.



When signing up clients to your application through OAuth 2.0 using their social email IDs, you request access to their photos and other media for an enhanced website experience. An attacker exploits an OAuth 2.0 vulnerability to gain access to users' private data, however. What steps can you take to address and fix this security vulnerability?
Incorrect -
Restrict new client registrations to a single social media platform.

Your choice: incorrect -
Switch to using OpenID Connect (OIDC) as the OAuth's access token.

Correct -
Switch to using JSON Web Token (JWT) as the OAuth's access token.

Incorrect -
Request that your clients strengthen their social email ID password.

Incorrect -
I don't know yet.


You create a website for users to interact with based on their sports interests. To participate in interactions, users must register on the site. You enable rate limiting for the number of logins per minute. What should you do if users unintentionally surpass the rate limit?
Incorrect -
Delete their accounts upon their next login attempt.

Your choice: correct -
Disable their next login attempts for the next few minutes.

Incorrect -
Ask them to complete two CAPTCHA challenges instead of one.

Incorrect -
Ask them to use a one-time password (OTP) on their next login attempt.

Incorrect -
I don't know yet.


Which RESTful design principle allows users to navigate to hyperlinks that they receive in an API response?
Incorrect -
Code on demand

Incorrect -
Statelessness

Your choice: incorrect -
Uniform interface

Correct -
Resource-oriented

Incorrect -
I don't know yet.


How do API endpoints help run database queries?
Incorrect -
They expose an interface to run SQL that the API consumer supplies.

Incorrect -
They can batch multiple requests into a single database query.

Incorrect -
They provide syntax checking before running a database query.

Your choice: correct -
They provide a standard set of commands for applications to query the database.

Incorrect -
I don't know yet.


You include pagination and filtering in an API. How does this affect the user experience?
Incorrect -
It guarantees that each API call takes the same amount of time to return data.

Incorrect -
It allows the consumer to define the structure of the objects that the API returns.

Your choice: correct -
It allows consumers to control what the API returns.

Incorrect -
It decreases usability by requiring developers to pass more data to the API.

Incorrect -
I don't know yet.


How would you construct the JSON Web Token (JWT) signature to transmit information between parties based on the following header and payload data?
header
{
  "alg": "RS256",
  "typ": "JWT"
}

payload
{
  "sub": "dummy",
  "name": "Pluralsight",
  "courses": "2545"
}

jwt = base64UrlEncode(header) + "." +
      base64UrlEncode(payload) + "." + 
      base64UrlEncode(signature)
Correct -
RSASHA256(
  base64UrlEncode(header) + "." +
  base64UrlEncode(payload),
  some_secret)
Incorrect -
base64UrlEncode(HMACSHA256(
                base64UrlEncode(header) + "." +
                base64UrlEncode(payload)))
Your choice: incorrect -
base64UrlEncode(RSASHA256(
                base64UrlEncode(header) + "/" +
                base64UrlEncode(payload),
                some_secret))
Incorrect -
HMACSHA256(
  base64UrlEncode(header) + "/" +
  base64UrlEncode(payload))
Incorrect -
I don't know yet.


You design an API using microservices architecture principles. You update the API version. What happens?
Incorrect -
The updates roll back with an error. 

Incorrect -
The updates can break a few services.  

Correct -
The updates do not affect any services. 

Incorrect -
The updates roll back with a warning.

Incorrect -
I don't know yet.



You build a social networking site that allows users to scroll at a rate of three feeds per second. The API permits access to 10 feeds per second. Some users exhaust their rate limit but are unsure what to do next. You set the X-RateLimit-Limit header to 10 for API requests per second, but this does not clarify the user's next steps. How can you address this uncertainty?
Incorrect -
Communicate the remaining requests per second to users using the Requests-Left HTTP header. 

Incorrect -
Communicate the upcoming delay time to users using the X-RateLimit-Delay HTTP header. 

Your choice: correct -
Communicate the upcoming delay time to users using the Retry-After HTTP header.

Incorrect -
Communicate the remaining requests per second to users using the X-RateLimit-Requests-Remaining HTTP header.  

Incorrect -
I don't know yet.



You develop API version 1.0.0 and, two years later, launch a significant upgrade, version 2.0.0. During the major release, you communicate to your user base that backward compatibility support for version 1.0.0 ends in one year. As that deadline approaches, some users still have not transitioned to the new version and are approaching the point where they will no longer receive company support. What actions should you take to ensure that customers do not experience a disruption?
Incorrect -
Keep version v1.0.0 support indefinitely for all users, regardless of their migration status.

Correct -
Further extend the grace period for all users, regardless of their migration status.

Your choice: incorrect -
Communicate the complete discontinuation of support for version 1.0.0 to users.

Incorrect -
Roll back the API to version v1.0.0 to maintain backward compatibility for each user.

Incorrect -
I don't know yet.


You set up a weather website at https://sky.com, complete with various sub-domains such as https://blue.sky.com and https://red.sky.com. You want to make the website accessible to the public, allowing anyone to view resources across all sub-domains. In the context of cross-origin resource sharing (CORS), how should you modify the HTTP headers?
Incorrect -
Access-Control-Allow-Origin: all
Access-Control-Allow-Methods: GET
Your choice: correct -
Access-Control-Allow-Origin: *
Access-Control-Allow-Methods: GET
Incorrect -
Access-Control-Allow-Origin: https://blue.sky.com, https://red.sky.com
Access-Control-Allow-Methods: GET, POST
Incorrect -
Access-Control-Allow-Domains: all 
Access-Control-Allow-Methods: GET, POST
Incorrect -
I don't know yet.

You create a microservice architecture-based API for an ecommerce platform. The platform enables users to search for a product, purchase it, and handle its delivery. A user selects a speaker worth $150. They finish the initial steps of the transaction that spans across multiple services. In the last step, the API specifies an invalid price value of $1,500. As the API owner, what action would you take in this scenario?
Incorrect -
Establish a non-transient service failure and keep all the user's previous successful steps intact. 

Incorrect -
Establish a transient service failure and keep all the user's previous successful steps intact.  

Your choice: incorrect -
Establish a transient service failure and cancel all the user's previous successful steps. 

Correct -
Establish a non-transient service failure and cancel all the user's previous successful steps.

Incorrect -
I don't know yet.


What statement is true when you switch from Rivest-Shamir-Adleman (RSA) to the Advanced Encryption Standard (AES) encryption algorithm?
Correct -
The sender and the receiver share a private key.

Incorrect -
The API data encryption process slows down.

Your choice: incorrect -
The API data encryption process involves two keys.

Incorrect -
Everyone, including the public, has access to the same key.

Incorrect -
I don't know yet.


You remove API gateways between clients and services in a microservices architecture. What happens?
Incorrect -
The security of services that have public endpoints remains intact.

Your choice: correct -
Clients track multiple endpoints by themselves.

Incorrect -
Clients receive reduced latency when a request call spans across multiple services.

Incorrect -
Clients initiate multiple request calls because no rate limiting is in place.

Incorrect -
I don't know yet.


You implement open authorization (OAuth2) on your website, but users want to access it programmatically. How can you facilitate their access?
Incorrect -
Generate multiple API keys and allocate each key to a batch of users until they regenerate.

Incorrect -
Generate a single API key, which is accessible to all of your registered and new users.

Your choice: incorrect -
Generate a time-bound API key, which is accessible to users within specific timeframes.

Correct -
Generate a user-specific API key, which is accessible only once until it regenerates.

Incorrect -
I don't know yet.


While developing a RESTful API, why would you use API keys?
Incorrect -
To allow anonymous traffic to the API

Incorrect -
To authenticate user login credentials

Incorrect -
To identify users' geographical location

Your choice: correct -
To govern the number of API calls

Incorrect -
I don't know yet.


You must display an HTTP status code to users who are persistently making frequent failed login attempts. Which HTTP status code should you use other than 429 Too Many Requests?
Incorrect -
505 HTTP Version Not Supported

Incorrect -
407 Proxy Authentication Required

Incorrect -
402 Payment Required

Your choice: correct -
503 Service Unavailable

Incorrect -
I don't know yet.




What security aspect does HTTPS emphasize when verifying digital certificates when connecting to a website's server?
Incorrect -
Encryption

Incorrect -
Authorization

Incorrect -
Data integrity

Your choice: correct -
Authentication

Incorrect -
I don't know yet.



You manage a highly secure API that receives a significant number of requests as your marketing campaign flourishes. During this time, a few clients face server refusals, accompanied by the HTTP 431 status code. To mitigate this issue, you use the Retry-After header which reduces the problem's frequency, but the underlying issue persists. How can you resolve the issue with little to no information loss?
Incorrect -
Require clients to include all cookies in the request.

Incorrect -
Require clients to include no cookies in the request.

Correct -
Ensure that the Referer header receives a small URL.

Your choice: incorrect -
Ensure that rel="blocked-by" follows the Link header. 

Incorrect -
I don't know yet.



 In JSON Web Token (JWT) syntax, where do you include the payload?
Incorrect -
xxx/xxx/payload
Correct -
xxx.payload.xxx
Incorrect -
payload/xxx/xxx
Incorrect -
xxx.xxx.payload
Incorrect -
I don't know yet.


Which test would you use to ensure that your API works the way you want it to?
Incorrect -
Load test

Your choice: incorrect -
Integration test

Correct -
Functional test

Incorrect -
Unit test

Incorrect -
I don't know yet.



You implement sorting with query parameters on an API. What is the main purpose of sorting without associating it with any new operations?
Incorrect -
To reduce the load on the server

Incorrect -
To allow the consumer to filter out results they do not want

Incorrect -
To improve API performance

Your choice: correct -
To allow the consumer to receive the data in the order they need

Incorrect -
I don't know yet.


You must use Swagger to document your API. Which is the correct format?
Your choice: correct -
paths:
  /SusbcribedUsers:
    get:
      summary: Gets a list of subscribed Users
      responses:
        '200':
          description: Success
        '403':
          description: API Key is not allowed to make request
Incorrect -
path: /SusbcribedUsers:
verbs: ['Get']
summary: Gets a list of subscribed Users
responses: [{'200': "Success'}, {'403': "API Key is not allowed to make request"}]
Incorrect -
{
    path: "/SubscribedUsers",
    get: {
	summary: "Gets a list of subscribed Users",
	responses: [
		"200": "success",
		"403": "API key is not allowed to make request"
	]
    }
}
Incorrect -
path: /SusbcribedUsers:
verbs: Get
abstract: Gets a list of subscribed Users
responses: ['Success', 'API Key is not allowed to make request'], [200, 403]
Incorrect -
I don't know yet.



An API allows consumers to specify an orderBy parameter. Why might a request that uses that parameter be slower than a request that does not use that parameter?
Your choice: correct -
The consumer can specify a field that is not indexed.

Incorrect -
The request with orderBy runs more calls to the database.

Incorrect -
The orderBy parameter relies on the complex groupBy parameter.

Incorrect -
The request with orderBy returns fewer records.

Incorrect -
I don't know yet.


You are designing the /Items API endpoint. What information should you return to the API consumer in the case where the inputs are incorrect?
Incorrect -
A generic message stating that the data is incorrect

Your choice: incorrect -
A specific error code the consumer can look up in the API's documentation

Correct -
The specific fields that were in error and how the user can fix them

Incorrect -
The database schema, so that consumers know what data to send

Incorrect -
I don't know yet.



After getting the first 20 users from the API, you make the following API call:
GET /Users?skip=10&take=20
Some users are the same in both API calls. What could be the cause of the duplicate users?
Correct -
Because the take variable was bigger than the skip variable, the API returns 10 duplicates and 10 new records.

Your choice: incorrect -
You did not specify an orderBy query parameter, causing the API to return random users, and occasionally duplicate data.

Incorrect -
You used the variable take when you should have used the variable page.

Incorrect -
skip and take are in the wrong spots. You should swap them.

Incorrect -
I don't know yet.



How many previous session states are active on the server at the third client request following RESTful API principles?
Incorrect -
Three

Your choice: correct -
Zero

Incorrect -
One

Incorrect -
Two

Incorrect -
I don't know yet.





You must configure the rate limit headers for an API endpoint. The response to the endpoint must hold information about the number of initial requests (70), used requests (30), and time to reset the rate limit (60 seconds). After endpoint configuration, how does the server modify the response when a user sends a request to the endpoint?
Incorrect -
HTTP/1.1 200 OK
Content-Type: application/json
X-Rate-Limit-Limit: 70
X-Rate-Limit-Remaining: 40
X-Rate-Limit-Reset: 1

{ }
Your choice: correct -
HTTP/1.1 200 OK
Content-Type: application/json
X-RateLimit-Limit: 70
X-RateLimit-Remaining: 40
X-RateLimit-Reset: 60

{ }
Incorrect -
HTTP/1.1 200 OK
Content-Type: application/json
X-Rate-Limit-Limit: 70
X-Rate-Limit-Used: 30
X-Rate-Limit-Reset: 1

{ }
Incorrect -
HTTP/1.1 200 OK
Content-Type: application/json
X-RateLimit-Limit: 70
X-RateLimit-Used: 30
X-RateLimit-Reset: 60

{ }
Incorrect -
I don't know yet.





You release an API version v2.0.0 with backward compatibility to v1.0.0. How long should you maintain this backward compatibility with the older version?
Incorrect -
Until all clients upgrade to the new version

Incorrect -
Until you release the major API version v3.0.0

Incorrect -
Until you release the patch API version v2.0.1 

Correct -
Until the expiration of the deprecation grace period

Incorrect -
I don't know yet.




You apply rate limiting on your API. What effect does this have in terms of resource utilization and the capacity for your API to accommodate users?
Incorrect -
You can accommodate the same number of users using the existing API resources.

Incorrect -
You can accommodate the same number of users even after you increase your API resources.

Your choice: correct -
You can accommodate more users with the existing resources.

Incorrect -
You can accommodate fewer users with the existing resources.

Incorrect -
I don't know yet.





You provide the server with two protocols to switch, arc/1 and sim/2, as follows:
GET /api/products HTTP/1.1
Host: www.ps.com
Connection: upgrade
Upgrade: arc/1, sim/2
How can you confirm that the server upgrades the connection?
Your choice: correct -
Verify that you receive the HTTP status code 101.

Incorrect -
Verify that the server asks you to navigate to a Uniform Resource Identifier (URI).

Incorrect -
Verify that the response has an unchanged cache version.

Incorrect -
Verify that you receive the HTTP status code 200. 

Incorrect -
I don't know yet.




You develop a bank portal with more than 50,000 user accounts. An attacker breaches your security, exposing user email and password data. You implement a more robust security system, but your team can still access user email-password pairs. What steps should you take to enhance user protection against both internal and external threats?
Incorrect -
Prompt users to change their passwords on a weekly basis.

Correct -
Save the hash of each password in your portal's database.

Your choice: incorrect -
Restrict team member access to the database.

Incorrect -
Delete user accounts that may pose security threats to the portal.

Incorrect -
I don't know yet.





Your application depends on an authorization server to implement OAuth 2.0 authorization. If the access token's validity period is 15 minutes, what should the refresh token's validity period be?
Incorrect -
15 seconds 

Incorrect -
10 microseconds

Your choice: correct -
1 hour

Incorrect -
15 minutes

Incorrect -
I don't know yet.



 Which statement is correct when using an API to access databases?
Incorrect -
APIs increase complexity, but guarantee performance improvements.

Incorrect -
APIs provide access to data but increase security risks.

Incorrect -
APIs enhance security but can decrease accuracy.

Your choice: correct -
APIs provide a standard interface but can decrease performance.

Incorrect -
I don't know yet.



You plan to release a major API version in two months, deprecating two old methods. You inform users of the new version release after instantly deprecating the methods, causing chaos for users who opted for the upgrade. How can you avoid this situation in the future?
Incorrect -
Delay the new major API version release, deprecate the methods upon version release, and communicate the news to users.

Your choice: correct -
Extend each method's deprecation period time to several months after releasing the new API major version.

Incorrect -
Retain the deprecated methods in each upcoming release and allow users to choose between old and new methods.

Incorrect -
Delay deprecating the methods until the next major API version release while following the existing communication steps.

Incorrect -
I don't know yet.



In your RESTful API, you create multiple resources. Your clients can access the content with proper authorization. A client requests an update to one of the resources. You use the PUT HTTP request method to partially alter the resource. You run the same PUT request two times, which completely replaces the resource. What action could you have taken to save the resource?
Your choice: correct -
Use the PATCH HTTP request method once instead of PUT.

Incorrect -
Use PUT once because it is not idempotent.

Incorrect -
Use PUT once because it is not cacheable. 

Incorrect -
Use the POST HTTP request method once instead of PUT.

Incorrect -
I don't know yet.




A user makes a GET request to a RESTful API's /cars endpoint to retrieve the two most expensive cars. The API responds with the following output:
{
    "cars": [
        {
            "id": 451,
            "name": "Car A",
            "price": 1000000.00,
            "links": {
                "self": { "href": "/cars/1" },
            }
        },
        {
            "id": 452,
            "name": "Car B",
            "price": 800000.00,
            "links": {
                "self": { "href": "/cars/2" },
            }
        }
    ],
    "_links": {
        "self": { "href": "/manufacturer" }
    }
}
The user cannot navigate to each car manufacturer within the API using each car resource. Using RESTful API design principles, what changes should you make to the API to correct the issue?
Incorrect -
Remove the underscore from "_links" and update its statement to "car" : { "href": "/manufacturer" }.

Your choice: correct -
Add "manufacturer": { "href": "/manufacturers/1" } and "manufacturer": { "href": "/manufacturers/2" } to the first and second car resources.

Incorrect -
Remove the underscore from "_links" and update its statement to "car" : { "href": "/manufacturers/{1|2}?" }. 

Incorrect -
Add "self": { "href": "/manufacturers/1" } and "self": { "href": "/manufacturers/2" } to the first and second car resources. 

Incorrect -
I don't know yet.


